//------------------------------------------------------------------------------
/// # MPMC channel
//------------------------------------------------------------------------------

use std::sync::{ mpsc, Arc, Mutex };

//------------------------------------------------------------------------------
/// Sender
//------------------------------------------------------------------------------
pub struct Sender<T>
{
    inner: Arc<Mutex<mpsc::Sender<T>>>,
}

impl<T> Sender<T>
{
    //--------------------------------------------------------------------------
    /// Clones the receiver.
    //--------------------------------------------------------------------------
    pub fn clone( &self ) -> Self
    {
        Self
        {
            inner: self.inner.clone(),
        }
    }

    //--------------------------------------------------------------------------
    /// Sends a message.
    //--------------------------------------------------------------------------
    pub fn send( &self, t: T ) -> Result<(), mpsc::SendError<T>>
    {
        self.inner.lock().unwrap().send(t)
    }
}

//------------------------------------------------------------------------------
/// Receiver
//------------------------------------------------------------------------------
pub struct Receiver<T>
{
    inner: Arc<Mutex<mpsc::Receiver<T>>>,
}

impl<T> Receiver<T>
{
    //--------------------------------------------------------------------------
    /// Clones the receiver.
    //--------------------------------------------------------------------------
    pub fn clone( &self ) -> Self
    {
        Self
        {
            inner: self.inner.clone(),
        }
    }

    //--------------------------------------------------------------------------
    /// Receives a message.
    //--------------------------------------------------------------------------
    pub fn recv( &self ) -> Result<T, mpsc::RecvError>
    {
        self.inner.lock().unwrap().recv()
    }

    //--------------------------------------------------------------------------
    /// Tries to receive a message.
    //--------------------------------------------------------------------------
    pub fn try_recv( &self ) -> Result<T, mpsc::TryRecvError>
    {
        self.inner.lock().unwrap().try_recv()
    }
}

//------------------------------------------------------------------------------
/// Creates a new MPMC channel.
//------------------------------------------------------------------------------
pub fn channel<T>() -> (Sender<T>, Receiver<T>)
{
    let (sender, receiver) = mpsc::channel();
    let sender = Sender
    {
        inner: Arc::new(Mutex::new(sender)),
    };
    let receiver = Receiver
    {
        inner: Arc::new(Mutex::new(receiver)),
    };
    (sender, receiver)
}
