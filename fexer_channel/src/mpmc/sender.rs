//------------------------------------------------------------------------------
/// # MPMC channel Sender
//------------------------------------------------------------------------------

use super::MpmcError;

use std::sync::{ mpsc, Arc, Mutex };


//------------------------------------------------------------------------------
/// Sender
//------------------------------------------------------------------------------
pub struct Sender<T>
{
    inner: Arc<Mutex<mpsc::Sender<T>>>,
}

impl<T> Sender<T>
{
    //--------------------------------------------------------------------------
    /// Creates a new Sender.
    //--------------------------------------------------------------------------
    pub fn new( sender: mpsc::Sender<T> ) -> Self
    {
        Self
        {
            inner: Arc::new(Mutex::new(sender)),
        }
    }

    //--------------------------------------------------------------------------
    /// Clones the receiver.
    //--------------------------------------------------------------------------
    pub fn clone( &self ) -> Self
    {
        Self
        {
            inner: self.inner.clone(),
        }
    }

    //--------------------------------------------------------------------------
    /// Sends a message.
    //--------------------------------------------------------------------------
    pub fn send( &self, t: T ) -> Result<(), MpmcError<T>>
    {
        self.inner.lock()?.send(t)?;
        Ok(())
    }
}


